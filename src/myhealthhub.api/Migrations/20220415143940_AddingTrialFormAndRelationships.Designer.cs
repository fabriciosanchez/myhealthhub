// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using myhealthhub.api.Models;

#nullable disable

namespace myhealthhub.api.Migrations
{
    [DbContext(typeof(MyHealthHubContext))]
    [Migration("20220415143940_AddingTrialFormAndRelationships")]
    partial class AddingTrialFormAndRelationships
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("myhealthhub.api.Models.Entities.FormLabel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FormsLabels");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.FormLabelPerVisit", b =>
                {
                    b.Property<Guid>("FormLabelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VisitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FormLabelId", "VisitId");

                    b.HasIndex("VisitId");

                    b.ToTable("FormLabelsPerVisits");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.Patient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.Physician", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Physicians");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.Study", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Studies");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.StudyPerPhysician", b =>
                {
                    b.Property<Guid>("StudyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PhysicianId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StudyId", "PhysicianId");

                    b.HasIndex("PhysicianId");

                    b.ToTable("StudiesPerPhysicians");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.StudyPerVisit", b =>
                {
                    b.Property<Guid>("StudyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VisitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StudyId", "VisitId");

                    b.HasIndex("VisitId");

                    b.ToTable("StudiesPerVisits");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.TrialCompletionForm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("APIImagesCollectionStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("AdjustmentsMadeTrialPeriodStatus")
                        .HasColumnType("bit");

                    b.Property<string>("BloodPressure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BodyWeight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTimeRemovalNeuromodulation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTrialImplant")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FormLabelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ImageAddedEncryptedDriveStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("LateralImagesCollectionStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("PainLocationNatureStatus")
                        .HasColumnType("bit");

                    b.Property<Guid>("PhysicianId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SiteId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelCoverageLead1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelCoverageLead2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("StudyTreatmentFeedbackStatus")
                        .HasColumnType("bit");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("VideoMotorAssessmentStatus")
                        .HasColumnType("bit");

                    b.Property<Guid>("VisitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FormLabelId");

                    b.HasIndex("PhysicianId");

                    b.HasIndex("VisitId");

                    b.ToTable("TrialCompletionForms");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.TrialForm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("APImagesCollectionStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("AnatomicalGuidanceLeadStatus")
                        .HasColumnType("bit");

                    b.Property<string>("BloodPressure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BodyWeight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTrial")
                        .HasColumnType("datetime2");

                    b.Property<string>("EPGModelNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EPGSerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EPGUsed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FormLabelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ImagesEncryptedMemoryDriveStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("LateralImagesCollectionStatus")
                        .HasColumnType("bit");

                    b.Property<string>("LocationProcedure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManufacturerLead1Lot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManufacturerLead1Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManufacturerLead1Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManufacturerLead1Serial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManufacturerLead2Lot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManufacturerLead2Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManufacturerLead2Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManufacturerLead2Serial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ParesthesiaMappingStatus")
                        .HasColumnType("bit");

                    b.Property<Guid>("PhysicianId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProgramNumber1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramNumber2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramNumber3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramNumber4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramNumber5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstAnode1Lead1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstAnode1Lead2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstAnode2Lead1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstAnode2Lead2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstAnode3Lead1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstAnode3Lead2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstAnode4Lead1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstAnode4Lead2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstAnode5Lead1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstAnode5Lead2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstCathode1Lead1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstCathode1Lead2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstCathode2Lead1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstCathode2Lead2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstCathode3Lead1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstCathode3Lead2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstCathode4Lead1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstCathode4Lead2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstCathode5Lead1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstCathode5Lead2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelLead1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelLead2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalNumberLeads")
                        .HasColumnType("int");

                    b.Property<Guid>("VisitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WaveForm1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WaveForm2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WaveForm3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WaveForm4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WaveForm5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("XMLFileDonwloadAndProvidedStatus")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FormLabelId");

                    b.HasIndex("PhysicianId");

                    b.HasIndex("VisitId");

                    b.ToTable("TrialForms");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.Upload", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VisitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VisitId");

                    b.ToTable("Uploads");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.Visit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTimeVisit")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Visits");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.VisitPerPatient", b =>
                {
                    b.Property<Guid>("PatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VisitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PatientId", "VisitId");

                    b.HasIndex("VisitId");

                    b.ToTable("VisitsPerPatients");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.FormLabelPerVisit", b =>
                {
                    b.HasOne("myhealthhub.api.Models.Entities.FormLabel", "FormLabel")
                        .WithMany("FormsLabelsPerVisits")
                        .HasForeignKey("FormLabelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("myhealthhub.api.Models.Entities.Visit", "Visit")
                        .WithMany("FormsLabelsPerVisits")
                        .HasForeignKey("VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormLabel");

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.StudyPerPhysician", b =>
                {
                    b.HasOne("myhealthhub.api.Models.Entities.Physician", "Physician")
                        .WithMany("StudiesPerPhysicians")
                        .HasForeignKey("PhysicianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("myhealthhub.api.Models.Entities.Study", "Study")
                        .WithMany("StudiesPerPhysicians")
                        .HasForeignKey("StudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Physician");

                    b.Navigation("Study");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.StudyPerVisit", b =>
                {
                    b.HasOne("myhealthhub.api.Models.Entities.Study", "Study")
                        .WithMany("StudiesPerVisits")
                        .HasForeignKey("StudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("myhealthhub.api.Models.Entities.Visit", "Visit")
                        .WithMany("StudiesPerVisits")
                        .HasForeignKey("VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Study");

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.TrialCompletionForm", b =>
                {
                    b.HasOne("myhealthhub.api.Models.Entities.FormLabel", "FormsLabels")
                        .WithMany("TrialCompletionForms")
                        .HasForeignKey("FormLabelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("myhealthhub.api.Models.Entities.Physician", "Physician")
                        .WithMany("TrialCompletionForms")
                        .HasForeignKey("PhysicianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("myhealthhub.api.Models.Entities.Visit", "Visit")
                        .WithMany("TrialCompletionForms")
                        .HasForeignKey("VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormsLabels");

                    b.Navigation("Physician");

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.TrialForm", b =>
                {
                    b.HasOne("myhealthhub.api.Models.Entities.FormLabel", "FormsLabels")
                        .WithMany("TrialForms")
                        .HasForeignKey("FormLabelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("myhealthhub.api.Models.Entities.Physician", "Physician")
                        .WithMany("TrialForms")
                        .HasForeignKey("PhysicianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("myhealthhub.api.Models.Entities.Visit", "Visit")
                        .WithMany("TrialForms")
                        .HasForeignKey("VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormsLabels");

                    b.Navigation("Physician");

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.Upload", b =>
                {
                    b.HasOne("myhealthhub.api.Models.Entities.Visit", "Visit")
                        .WithMany("Uploads")
                        .HasForeignKey("VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.VisitPerPatient", b =>
                {
                    b.HasOne("myhealthhub.api.Models.Entities.Patient", "Patient")
                        .WithMany("VisitsPerPatients")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("myhealthhub.api.Models.Entities.Visit", "Visit")
                        .WithMany("VisitsPerPatients")
                        .HasForeignKey("VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.FormLabel", b =>
                {
                    b.Navigation("FormsLabelsPerVisits");

                    b.Navigation("TrialCompletionForms");

                    b.Navigation("TrialForms");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.Patient", b =>
                {
                    b.Navigation("VisitsPerPatients");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.Physician", b =>
                {
                    b.Navigation("StudiesPerPhysicians");

                    b.Navigation("TrialCompletionForms");

                    b.Navigation("TrialForms");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.Study", b =>
                {
                    b.Navigation("StudiesPerPhysicians");

                    b.Navigation("StudiesPerVisits");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.Visit", b =>
                {
                    b.Navigation("FormsLabelsPerVisits");

                    b.Navigation("StudiesPerVisits");

                    b.Navigation("TrialCompletionForms");

                    b.Navigation("TrialForms");

                    b.Navigation("Uploads");

                    b.Navigation("VisitsPerPatients");
                });
#pragma warning restore 612, 618
        }
    }
}
