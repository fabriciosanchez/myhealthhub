// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using myhealthhub.api.Models;

#nullable disable

namespace myhealthhub.api.Migrations
{
    [DbContext(typeof(MyHealthHubContext))]
    [Migration("20220502171539_ChronicPainLocationFrontAndBackNullable")]
    partial class ChronicPainLocationFrontAndBackNullable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("myhealthhub.api.Models.Entities.BaselineForm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActiveLitigation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AgeConsent")
                        .HasColumnType("int");

                    b.Property<bool>("AnginaStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("BackPainFBSSStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("BackPainStatus")
                        .HasColumnType("bit");

                    b.Property<string>("BloodPressure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CausalgiaMuscle")
                        .HasColumnType("bit");

                    b.Property<bool>("CausalgiaStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("ChemotherapyRelatedStatus")
                        .HasColumnType("bit");

                    b.Property<string>("ChronicPainEpisodeFrequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainEpisodeFrequencyComparisson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainEpisodeIntensity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainEpisodeLasting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationBackStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront17")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront18")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront19")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront20")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront21")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront22")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront23")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront24")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront25")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront26")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront27")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront28")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront29")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront30")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront31")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront32")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront33")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront34")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront35")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront36")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront37")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront38")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront39")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront40")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront41")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront42")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront43")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront44")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFront9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainLocationFrontStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChronicPainRecurrency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ChronicPostOperativePainStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("CriticalLimbSchemiaStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateTimeBaseline")
                        .HasColumnType("datetime2");

                    b.Property<int>("DaysMissedDuePain")
                        .HasColumnType("int");

                    b.Property<bool>("DiabeticStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Ethinicity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExerciseFrequence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FalledBackSurgerySyndromeStatus")
                        .HasColumnType("bit");

                    b.Property<string>("FalledBackSyndromeTypeSurgery1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FalledBackSyndromeTypeSurgery2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FalledBackSyndromeTypeSurgery3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FalledBackSyndromeTypeSurgery4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FalledBackSyndromeTypeSurgery5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FalledBackSyndromeTypeSurgeryLevel1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FalledBackSyndromeTypeSurgeryLevel2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FalledBackSyndromeTypeSurgeryLevel3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FalledBackSyndromeTypeSurgeryLevel4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FalledBackSyndromeTypeSurgeryLevel5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FormLabelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Height")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IICaudal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IIFacetInjections")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IIIntradiscal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IIOtherJoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IIPreviousDRG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IIPreviousSCS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IIRadiofrequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IISacroillacJoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IITransforraminal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IITranslaminar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImpactPainInLife")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ImplantableDrug")
                        .HasColumnType("bit");

                    b.Property<bool>("InjectionsInterventionsStatus")
                        .HasColumnType("bit");

                    b.Property<string>("InsuranceSituation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LevelPainZeroToTen")
                        .HasColumnType("int");

                    b.Property<bool>("NeckUperLimbSchemiaStatus")
                        .HasColumnType("bit");

                    b.Property<string>("PainPreventToWork")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PeripheralNeuropathyStatus")
                        .HasColumnType("bit");

                    b.Property<Guid>("PhysicianId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("PostAmputationStatus")
                        .HasColumnType("bit");

                    b.Property<string>("PostOperativePainTypeSurgery1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostOperativePainTypeSurgery2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostOperativePainTypeSurgery3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostOperativePainTypeSurgery4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostOperativePainTypeSurgery5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostOperativePainTypeSurgeryYear1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostOperativePainTypeSurgeryYear2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostOperativePainTypeSurgeryYear3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostOperativePainTypeSurgeryYear4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostOperativePainTypeSurgeryYear5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RaceAmericanIndian")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RaceAsian")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RaceBlackAfrican")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RaceDeclined")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RaceNativeHawaian")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RaceOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RaceWhiteCaucasian")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ReflexSympatheticDystrophyStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SmokerStatus")
                        .HasColumnType("bit");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectPrimaryChronicPainIndication")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TimeChronicPainMonths")
                        .HasColumnType("int");

                    b.Property<int?>("TimeChronicPainYears")
                        .HasColumnType("int");

                    b.Property<bool>("TreatmentForPainStatus")
                        .HasColumnType("bit");

                    b.Property<string>("TreatmentYesAcunpunture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TreatmentYesChiropracticTherapy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TreatmentYesCogBehavioralTherapy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TreatmentYesHypnotherapy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TreatmentYesMassageTherapy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TreatmentYesOccupationalTherapy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TreatmentYesPhysicalTherapy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TreatmentYesPsychotherapy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("VisceralPainStatus")
                        .HasColumnType("bit");

                    b.Property<Guid>("VisitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Weight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkCompensation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkSituation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FormLabelId");

                    b.HasIndex("PhysicianId");

                    b.HasIndex("VisitId");

                    b.ToTable("BaselineForms");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.FormLabel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormUrlRoute")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("StatusFilling")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("FormsLabels");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.FormLabelPerVisit", b =>
                {
                    b.Property<Guid>("FormLabelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VisitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FormLabelId", "VisitId");

                    b.HasIndex("VisitId");

                    b.ToTable("FormLabelsPerVisits");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.Patient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InternalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.Physician", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Physicians");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.Study", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Studies");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.StudyPerPhysician", b =>
                {
                    b.Property<Guid>("StudyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PhysicianId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StudyId", "PhysicianId");

                    b.HasIndex("PhysicianId");

                    b.ToTable("StudiesPerPhysicians");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.StudyPerVisit", b =>
                {
                    b.Property<Guid>("StudyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VisitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StudyId", "VisitId");

                    b.HasIndex("VisitId");

                    b.ToTable("StudiesPerVisits");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.TrialCompletionForm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("APIImagesCollectionStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("AdjustmentsMadeTrialPeriodStatus")
                        .HasColumnType("bit");

                    b.Property<string>("BloodPressure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BodyWeight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTimeRemovalNeuromodulation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTrialImplant")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FormLabelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ImageAddedEncryptedDriveStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("LateralImagesCollectionStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("PainLocationNatureStatus")
                        .HasColumnType("bit");

                    b.Property<Guid>("PhysicianId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SiteId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelCoverageLead1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelCoverageLead2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("StudyTreatmentFeedbackStatus")
                        .HasColumnType("bit");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("VideoMotorAssessmentStatus")
                        .HasColumnType("bit");

                    b.Property<Guid>("VisitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FormLabelId");

                    b.HasIndex("PhysicianId");

                    b.HasIndex("VisitId");

                    b.ToTable("TrialCompletionForms");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.TrialForm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("APImagesCollectionStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("AnatomicalGuidanceLeadStatus")
                        .HasColumnType("bit");

                    b.Property<string>("BloodPressure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BodyWeight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTrial")
                        .HasColumnType("datetime2");

                    b.Property<string>("EPGModelNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EPGSerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EPGUsed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FormLabelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ImagesEncryptedMemoryDriveStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("LateralImagesCollectionStatus")
                        .HasColumnType("bit");

                    b.Property<string>("LocationProcedure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManufacturerLead1Lot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManufacturerLead1Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManufacturerLead1Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManufacturerLead1Serial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManufacturerLead2Lot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManufacturerLead2Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManufacturerLead2Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManufacturerLead2Serial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ParesthesiaMappingStatus")
                        .HasColumnType("bit");

                    b.Property<Guid>("PhysicianId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProgramNumber1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramNumber2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramNumber3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramNumber4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramNumber5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstAnode1Lead1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstAnode1Lead2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstAnode2Lead1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstAnode2Lead2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstAnode3Lead1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstAnode3Lead2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstAnode4Lead1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstAnode4Lead2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstAnode5Lead1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstAnode5Lead2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstCathode1Lead1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstCathode1Lead2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstCathode2Lead1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstCathode2Lead2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstCathode3Lead1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstCathode3Lead2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstCathode4Lead1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstCathode4Lead2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstCathode5Lead1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelFirstCathode5Lead2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelLead1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpinalLevelLead2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalNumberLeads")
                        .HasColumnType("int");

                    b.Property<Guid>("VisitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WaveForm1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WaveForm2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WaveForm3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WaveForm4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WaveForm5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("XMLFileDonwloadAndProvidedStatus")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FormLabelId");

                    b.HasIndex("PhysicianId");

                    b.HasIndex("VisitId");

                    b.ToTable("TrialForms");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.Upload", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VisitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VisitId");

                    b.ToTable("Uploads");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.Visit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Visits");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.VisitPerPatient", b =>
                {
                    b.Property<Guid>("PatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VisitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PatientId", "VisitId");

                    b.HasIndex("VisitId");

                    b.ToTable("VisitsPerPatients");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.BaselineForm", b =>
                {
                    b.HasOne("myhealthhub.api.Models.Entities.FormLabel", "FormsLabels")
                        .WithMany("BaselineForms")
                        .HasForeignKey("FormLabelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("myhealthhub.api.Models.Entities.Physician", "Physician")
                        .WithMany("BaselineForms")
                        .HasForeignKey("PhysicianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("myhealthhub.api.Models.Entities.Visit", "Visit")
                        .WithMany("BaselineForms")
                        .HasForeignKey("VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormsLabels");

                    b.Navigation("Physician");

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.FormLabelPerVisit", b =>
                {
                    b.HasOne("myhealthhub.api.Models.Entities.FormLabel", "FormLabel")
                        .WithMany("FormsLabelsPerVisits")
                        .HasForeignKey("FormLabelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("myhealthhub.api.Models.Entities.Visit", "Visit")
                        .WithMany("FormsLabelsPerVisits")
                        .HasForeignKey("VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormLabel");

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.StudyPerPhysician", b =>
                {
                    b.HasOne("myhealthhub.api.Models.Entities.Physician", "Physician")
                        .WithMany("StudiesPerPhysicians")
                        .HasForeignKey("PhysicianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("myhealthhub.api.Models.Entities.Study", "Study")
                        .WithMany("StudiesPerPhysicians")
                        .HasForeignKey("StudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Physician");

                    b.Navigation("Study");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.StudyPerVisit", b =>
                {
                    b.HasOne("myhealthhub.api.Models.Entities.Study", "Study")
                        .WithMany("StudiesPerVisits")
                        .HasForeignKey("StudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("myhealthhub.api.Models.Entities.Visit", "Visit")
                        .WithMany("StudiesPerVisits")
                        .HasForeignKey("VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Study");

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.TrialCompletionForm", b =>
                {
                    b.HasOne("myhealthhub.api.Models.Entities.FormLabel", "FormsLabels")
                        .WithMany("TrialCompletionForms")
                        .HasForeignKey("FormLabelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("myhealthhub.api.Models.Entities.Physician", "Physician")
                        .WithMany("TrialCompletionForms")
                        .HasForeignKey("PhysicianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("myhealthhub.api.Models.Entities.Visit", "Visit")
                        .WithMany("TrialCompletionForms")
                        .HasForeignKey("VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormsLabels");

                    b.Navigation("Physician");

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.TrialForm", b =>
                {
                    b.HasOne("myhealthhub.api.Models.Entities.FormLabel", "FormsLabels")
                        .WithMany("TrialForms")
                        .HasForeignKey("FormLabelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("myhealthhub.api.Models.Entities.Physician", "Physician")
                        .WithMany("TrialForms")
                        .HasForeignKey("PhysicianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("myhealthhub.api.Models.Entities.Visit", "Visit")
                        .WithMany("TrialForms")
                        .HasForeignKey("VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormsLabels");

                    b.Navigation("Physician");

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.Upload", b =>
                {
                    b.HasOne("myhealthhub.api.Models.Entities.Visit", "Visit")
                        .WithMany("Uploads")
                        .HasForeignKey("VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.VisitPerPatient", b =>
                {
                    b.HasOne("myhealthhub.api.Models.Entities.Patient", "Patient")
                        .WithMany("VisitsPerPatients")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("myhealthhub.api.Models.Entities.Visit", "Visit")
                        .WithMany("VisitsPerPatients")
                        .HasForeignKey("VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.FormLabel", b =>
                {
                    b.Navigation("BaselineForms");

                    b.Navigation("FormsLabelsPerVisits");

                    b.Navigation("TrialCompletionForms");

                    b.Navigation("TrialForms");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.Patient", b =>
                {
                    b.Navigation("VisitsPerPatients");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.Physician", b =>
                {
                    b.Navigation("BaselineForms");

                    b.Navigation("StudiesPerPhysicians");

                    b.Navigation("TrialCompletionForms");

                    b.Navigation("TrialForms");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.Study", b =>
                {
                    b.Navigation("StudiesPerPhysicians");

                    b.Navigation("StudiesPerVisits");
                });

            modelBuilder.Entity("myhealthhub.api.Models.Entities.Visit", b =>
                {
                    b.Navigation("BaselineForms");

                    b.Navigation("FormsLabelsPerVisits");

                    b.Navigation("StudiesPerVisits");

                    b.Navigation("TrialCompletionForms");

                    b.Navigation("TrialForms");

                    b.Navigation("Uploads");

                    b.Navigation("VisitsPerPatients");
                });
#pragma warning restore 612, 618
        }
    }
}
