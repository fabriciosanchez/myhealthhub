#!/bin/bash

# GLOBAL VARIABLES
SUBSCRIPTION="<your-subscription-id-here>"
RG="<your-resource-group-here>"
LOCATION="<your-azure-region-here>"
APPSERVICEPLAN="<your-app-service-plan-name-here>"
WEBAPP="<your-webapp-name-here>"
SQLSERVER="<your-sql-server-name-here>"
SQLDB="<your-sql-db-name-here>"
STORAGE="<your-storage-account-name>"
CONTAINER="files"

# AUTHENTICATING USER WITH MICROSOFT AZURE
az login

# DEFINING DEFAULT ACCOUNT
az account set -s $SUBSCRIPTION

# CREATING A NEW RESOURCE GROUP
az group create -n $RG -l $LOCATION

# CREATING A NEW APP SERVICE PLAN
az appservice plan create \
    -n $APPSERVICEPLAN \
    -g $RG \
    --location $LOCATION \
    --sku B1 \
    --number-of-workers 1

# CREATING A NEW WEB APP

# Use this to see a list of available runtimes
#az webapp list-runtimes

# Creates the webapp to host the API
az webapp create \
    -n $WEBAPP \
    -g $RG \
    -p $APPSERVICEPLAN \
    --runtime "DOTNET|6.0"

# CREATING AN INSTANCE OF APPLICATION INSIGHTS FOR THE API

# application-insights CLI is still in preview and should be added separatelly through the command below.
# If you have it added already, please, jump to to the second command line below.
# Below command can change in future releases.
# az extension add -n application-insights

# Creates a new app insights component
az monitor app-insights component create \
    --app $WEBAPP \
    --resource-group $RG \
    --location $LOCATION \
    --kind web \
    --application-type web

# CREATING SQL DATABASE SERVER AND FIREWALL RULES
az sql server create \
    -n $SQLSERVER \
    -g $RG \
    -l $LOCATION \
    -u <your-server-username-here> \
    -p <your-server-password-here> \
    --enable-public-network true

az sql server firewall-rule create \
    -n <your-dev-machine-name-here> \
    -g $RG \
    -s $SQLSERVER \
    --start-ip-address <your-initial-ip-range> \
    --end-ip-address <your-final-ip-range>

az sql server firewall-rule create \
    -g $RG \
    -s $SQLSERVER \
    -n allow-azure-services \
    --start-ip-address 0.0.0.0 \
    --end-ip-address 0.0.0.0

# CREATING THE DATABASE
# User and password is inherited from the virtual server.
az sql db create \
    -n $SQLDB \
    -g $RG \
    -s $SQLSERVER \
    --service-objective S0

# CREATING ENVIRONMENT VARIABLES FOR THE WEBAPP
az webapp config appsettings set \
    -g $RG \
    -n $WEBAPP \
    --settings AzureAd:Instance=https://login.microsoftonline.com/

az webapp config appsettings set \
    -g $RG \
    -n $WEBAPP \
    --settings AzureAd:Domain=<your-tenant-domain-here>

az webapp config appsettings set \
    -g $RG \
    -n $WEBAPP \
    --settings AzureAd:TenantId=<your-tenant-id-here>

az webapp config appsettings set \
    -g $RG \
    -n $WEBAPP \
    --settings AzureAd:ClientId=<your-client(app)-id-here>

az webapp config appsettings set \
    -g $RG \
    -n $WEBAPP \
    --settings AzureAd:AllowWebApiToBeAuthorizedByACL=true

az webapp config appsettings set \
    -g $RG \
    -n $WEBAPP \
    --settings ConnectionStrings:StorageAccount=<your-storage-account-connection-string>
# CREATING DATABASE CONNECTION STRING
az webapp config connection-string set \
    --connection-string-type SQLAzure \
    --name $WEBAPP \
    -g $RG \
    --settings ConnectionStrings:DBConnection='<your-sqlserver-info-here>;Database=<your-database-name>;User Id=<your-database-username>;Password=<your-database-password>;MultipleActiveResultSets=True'

# CREATING STORAGE ACCOUNT AND CONTAINER FOR UPLOADS
az storage account create \
    -n $STORAGE \
    -g $RG \
    --access-tier Hot \
    --allow-blob-public-access true \
    --location $LOCATION \
    --kind StorageV2 \
    --sku Standard_LRS

az storage container create \
    -n $CONTAINER \
    --resource-group $RG \
    --account-name $STORAGE \
    --public-access container